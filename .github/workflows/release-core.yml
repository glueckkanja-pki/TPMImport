# This creates a new release on GitHub

name: Release Current .NET Core Version

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v9
        with:
          # Optional, GitHub token
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: build-core.yml
          # Optional, the conclusion of a completed workflow to search for
          # Can be one of:
          # "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Ignores conclusion by default (thus using the most recent completed run when no other option is specified, regardless of conclusion)
          workflow_conclusion: success
          # Optional, will use the branch
          branch: main
          # Optional, directory where to extract artifact
          path: publish

      - name: Create tag
        id: create_tag
        run: |
          tag=$(date +"%Y%m%d-%H%M-core")
          echo "::set-output name=tag::$tag"

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false

          # Some debug output
      - name: "[Debug] Where Are We"
        run: pwd
      - name: "[Debug] List Files"
        run: ls -Rs
          
      - name: Upload Artifacts to Release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: publish/tpmimport-win-x64/TPMImport.exe
          asset_name: TPMImport.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Publish Release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
